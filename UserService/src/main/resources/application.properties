#This name will be used to register the service in Eureka
spring.application.name=USER-SERVICE

# Server configuration
server.port=8081

# Database configuration
spring.datasource.url=jdbc:mysql://localhost:3306/microservices
spring.datasource.username=root
spring.datasource.password=siddhi@2209
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA / Hibernate settings
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect


#coz implemented ConfigServer for repetitive configurations, so this way import it
#we have eureka client configuration there, so can comment here
#Github -> ConfigServer(added Github Link) -> Services
spring.config.import=optional:configserver:http://localhost:8085
#spring.profiles.active=dev - to active dev profile..same for prod...it will take those file from repo

## Eureka instance config
#eureka.instance.prefer-ip-address=true

## Eureka client config
#eureka.client.fetch-registry=true
#eureka.client.register-with-eureka=true
#eureka.client.service-url.defaultZone=http://localhost:8761/eureka



# Management endpoints
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=always


# Resilience4j circuit breaker configuration
#instance name -  ratingHotelBreaker see UserController method that has @CircuitBreaker annotation
#failureRateThreshold - if 50% jyada failure rate raha to cct open hoga
#read about all properties - https://resilience4j.readme.io/docs/circuitbreaker

resilience4j.circuitbreaker.instances.ratingHotelBreaker.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.ratingHotelBreaker.eventConsumerBufferSize=10
resilience4j.circuitbreaker.instances.ratingHotelBreaker.failureRateThreshold=50
resilience4j.circuitbreaker.instances.ratingHotelBreaker.minimumNumberOfCalls=5
resilience4j.circuitbreaker.instances.ratingHotelBreaker.automaticTransitionFromOpenToHalfOpenEnabled=true
resilience4j.circuitbreaker.instances.ratingHotelBreaker.waitDurationInOpenState=6s
resilience4j.circuitbreaker.instances.ratingHotelBreaker.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.ratingHotelBreaker.slidingWindowSize=10
resilience4j.circuitbreaker.instances.ratingHotelBreaker.slidingWindowType=COUNT_BASED


#RETRY Configuration
#max-attempts=3: Total 3 tries (1 original + 2 retries)
#wait-duration=5s: Wait 5 seconds between each attempt
resilience4j.retry.instances.ratingHotelService.max-attempts=3
resilience4j.retry.instances.ratingHotelService.wait-duration=5s


# Rate Limiter Configuration
#Allows 2 calls(limit-for-period) per 4 seconds(limit-refresh-period)
#timeout-duration=2s -> If the rate limit is reached, it will wait up to 2 seconds before throwing an error
resilience4j.ratelimiter.instances.userRateLimiter.limit-refresh-period=4s
resilience4j.ratelimiter.instances.userRateLimiter.limit-for-period=2
resilience4j.ratelimiter.instances.userRateLimiter.timeout-duration=2s


#OKTA - Spring Security
okta.oauth2.issuer=https://dev-04860074.okta.com/oauth2/default
okta.oauth2.audience=api://default


# And User Service is calling other services in it so it is acting as *client* for Rating and Hotel Service
#so adding configuration for that as well
spring.security.oauth2.resourceserver.jwt.issuer-uri=https://dev-04860074.okta.com/oauth2/default

#OAuth2 Client Configuration
# my-internal-client used in Feign Client Interceptor & RestTemplate Interceptor
spring.security.oauth2.client.registration.my-internal-client.provider=okta
spring.security.oauth2.client.registration.my-internal-client.authorization-grant-type=client_credentials
spring.security.oauth2.client.registration.my-internal-client.scope=internal
spring.security.oauth2.client.registration.my-internal-client.client-id=0oapaxl7sxjRldWBG5d7
spring.security.oauth2.client.registration.my-internal-client.client-secret=JJTGbpG7wAqbT_Zb82UQbfRxtnq5H6chdkwoK1n6yq4aBrxIhO4gvmYMV_YK-6gy

spring.security.oauth2.client.provider.okta.issuer-uri=https://dev-04860074.okta.com/oauth2/default







