# Application name
spring.application.name=API-GATEWAY
# Server port
server.port=8084

# Eureka configuration
eureka.instance.prefer-ip-address=true
eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true
eureka.client.service-url.defaultZone=http://localhost:8761/eureka

#lb = load balancer
#predicates = URL of services            #Path = uri+predicates (**= all requests)
# Spring Cloud Gateway Routes
spring.cloud.gateway.server.webflux.routes[0].id=USER-SERVICE
spring.cloud.gateway.server.webflux.routes[0].uri=lb://USER-SERVICE
spring.cloud.gateway.server.webflux.routes[0].predicates[0]=Path=/users/**

spring.cloud.gateway.server.webflux.routes[1].id=HOTEL-SERVICE
spring.cloud.gateway.server.webflux.routes[1].uri=lb://HOTEL-SERVICE
spring.cloud.gateway.server.webflux.routes[1].predicates[0]=Path=/hotels/**,/staffs/**

spring.cloud.gateway.server.webflux.routes[2].id=RATING-SERVICE
spring.cloud.gateway.server.webflux.routes[2].uri=lb://RATING-SERVICE
spring.cloud.gateway.server.webflux.routes[2].predicates[0]=Path=/ratings/**


# Okta OAuth2 Configuration for API Gateway
# issuer & audience from Okta Website ->           Security -> API
# client-id and client-secret from Okta Website -> Applications -> MyWebApp which we created
okta.oauth2.issuer=https://dev-04860074.okta.com/oauth2/default
okta.oauth2.audience=api://default
okta.oauth2.client-id=0oapaxl7sxjRldWBG5d7
okta.oauth2.client-secret=JJTGbpG7wAqbT_Zb82UQbfRxtnq5H6chdkwoK1n6yq4aBrxIhO4gvmYMV_YK-6gy
okta.oauth2.scopes=openid, profile, email, offline_access
